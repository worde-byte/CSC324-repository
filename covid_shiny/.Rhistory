covid_data %>%
mutate(lat=ifelse(location=="Africa", 2.3,
ifelse(location=="North America", 47.1,
ifelse(location=="Europe", 54.5,
ifelse(location=="Asia", 34.0,
ifelse(location=="Oceania", -22.7, -8.7))))))
covid_data <-
covid_data %>%
mutate(long=ifelse(location=="Africa", 34.5,
ifelse(location=="North America", -101.3,
ifelse(location=="Europe", 25.2,
ifelse(location=="Asia", 100.6,
ifelse(location=="Oceania", 140.0, -55.5))))))
#shows all cases on 2020/08/31
# covid_data_his <-
#   covid_data %>%
#     filter(date == as.Date("2020-08-31"))
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million < 50)
#
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million > 0, new_cases_per_million < 50)
#
# #shows all cases in a continent
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million > 50)
#
# #creating a histogram with covid_data_his
# ggplot(covid_data_his, aes(new_cases_per_million)) +
#   geom_histogram(binwidth=1)
ggplot(covid_data, aes(long, lat)) +
geom_point(size=.25) +
coord_quickmap()
covid_data <-
covid_data %>%
mutate(lat=ifelse(location=="Africa", -8.7,
ifelse(location=="North America", 47.1,
ifelse(location=="Europe", 54.5,
ifelse(location=="Asia", 34.0,
ifelse(location=="Oceania", -22.7, -8.7))))))
ggplot(covid_data, aes(lat, long)) +
geom_point(size=.25) +
coord_quickmap()
ggplot(covid_data, aes(long, lat)) +
geom_polygon(fill = "white", color = "grey50") +
coord_quickmap()
ggplot(covid_data, aes(long, late)) +
geom_point(size=.25) +
coord_quickmap()
ggplot(covid_data, aes(long, lat)) +
geom_point(size=.25) +
coord_quickmap()
ggplot(covid_data, aes(long, lat)) +
geom_point(size=.25, show.legend = location) +
coord_quickmap()
view(mi_counties)
world <- map_data("world")
world <- map_data("world")
view(world)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
library(tidyverse)
library(readxl)
#reading data
covid_data_2_csv <- read_excel("C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/data/covid-data-2.csv.xlsx")
View(covid_data_2_csv)
#filtering by columns I want
covid_data <- select(covid_data_2_csv, iso_code:new_cases_per_million)
#making a plot of cases over time for everything (messy)
ggplot(data=covid_data) +
geom_point(mapping = aes(x = date, y = total_cases))
#removes all the specific countries leaving just the aggregates over the continent
covid_data <-
covid_data %>%
filter(is.na(continent))
#creating a histogram for lab 2
# ggplot(covid_data, aes(new_cases_per_million)) +
#   geom_histogram()
#a list of all the cotinents
my_list <- list("Africa", "Asia", "Europe", "Oceania", "South America", "North America")
#filter to get just continent data
covid_data <- filter(covid_data, location=="Africa" | location == "Europe" | location == "Asia"
| location == "Oceania" | location == "South America" |
location == "North America")
#generating latitude and longitude
covid_data <-
covid_data %>%
mutate(lat=ifelse(location=="Africa", -8.7,
ifelse(location=="North America", 47.1,
ifelse(location=="Europe", 54.5,
ifelse(location=="Asia", 34.0,
ifelse(location=="Oceania", -22.7, -8.7))))))
covid_data <-
covid_data %>%
mutate(long=ifelse(location=="Africa", 34.5,
ifelse(location=="North America", -101.3,
ifelse(location=="Europe", 25.2,
ifelse(location=="Asia", 100.6,
ifelse(location=="Oceania", 140.0, -55.5))))))
#map  of continents
ggplot(covid_data, aes(long, lat)) +
geom_point(size=.25, show.legend = location) +
coord_quickmap()
#world map
world <- map_data("world")
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
geom_point(
data = covid_data,
aes(long, lat, color = location),
alpha = .7
)
#shows all cases on 2020/08/31
# covid_data_his <-
#   covid_data %>%
#     filter(date == as.Date("2020-08-31"))
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million < 50)
#
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million > 0, new_cases_per_million < 50)
#
# #shows all cases in a continent
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million > 50)
#
# #creating a histogram with covid_data_his
# ggplot(covid_data_his, aes(new_cases_per_million)) +
#   geom_histogram(binwidth=1)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
geom_point(
data = covid_data,
aes(long, lat,
color = location,
size = new_cases_per_million),
alpha = .7
)
covid_data <- filter(covid_data, location=="Africa" | location == "Europe" | location == "Asia"
| location == "Oceania" | location == "South America" |
location == "North America")
covid_data <-
covid_data %>%
mutate(long=ifelse(location=="Africa", 34.5,
ifelse(location=="North America", -101.3,
ifelse(location=="Europe", 25.2,
ifelse(location=="Asia", 100.6,
ifelse(location=="Oceania", 140.0, -55.5))))))
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
#reading data
#covid_data_2_csv <- read_excel("C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/data/covid-data-2.csv.xlsx")
#View(covid_data_2_csv)
covid_data = read.csv("covid-data-2.csv", header = TRUE, sep = ",")
#View(covid_data_2_csv)
##BY COUNTRY
covid_data_by_country <- covid_data
#View(lat_long)
covid_data_by_country <- select(covid_data_by_country, iso_code:new_cases_per_million)
#getting lat and long
covid_data_by_country <-
covid_data_by_country %>%
mutate(lat=if(lat_long$country==location){latitude})
colnames(lat_long) <- c('code', 'lat', 'long', 'location')
covid_data_by_country <- merge(covid_data_by_country, lat_long, by='location', all=TRUE)
covid_data_by_country <- filter(covid_data_by_country, !is.na(lat))
g <- ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
geom_point(
data = covid_data_by_country,
aes(long, lat,
size = new_cases_per_million),
alpha = .7
)
g
##END BY COUNTRY
#filtering by columns I want
covid_data <- select(covid_data, iso_code:new_cases_per_million)
#removes all the specific countries leaving just the aggregates over the continent
# covid_data <-
#   covid_data %>%
#   filter(is.na(continent))
covid_data <- filter(covid_data, location=="Africa" | location == "Europe" | location == "Asia"
| location == "Oceania" | location == "South America" |
location == "North America")
#generating latitude and longitude
covid_data <-
covid_data %>%
mutate(lat=ifelse(location=="Africa", -8.7,
ifelse(location=="North America", 47.1,
ifelse(location=="Europe", 54.5,
ifelse(location=="Asia", 34.0,
ifelse(location=="Oceania", -22.7, -8.7))))))
covid_data <-
covid_data %>%
mutate(long=ifelse(location=="Africa", 34.5,
ifelse(location=="North America", -101.3,
ifelse(location=="Europe", 25.2,
ifelse(location=="Asia", 100.6,
ifelse(location=="Oceania", 140.0, -55.5))))))
day <- as.Date("2021-02-22")
#test <- strftime(as.Date(day, format="%d/%m/%Y"), format="%m/%d/%Y")
strtest <- str_glue("{month(day)}/{day(day)}/{year(day)}")
# strtest <- as.character(test)
covid_by_day <- filter(covid_data, date == strtest)
#world map
world <- map_data("world")
day <- as.Date("2020-03-20","%Y-%m-%d")
g <- ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
geom_point(
data = covid_by_day,
aes(long, lat,
color = location,
size = new_cases_per_million),
alpha = .7
)
g
#shows all cases on 2020/08/31
# covid_data_his <-
#   covid_data %>%
#     filter(date == as.Date("2020-08-31"))
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million < 50)
#
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million > 0, new_cases_per_million < 50)
#
# #shows all cases in a continent
# covid_data_his <-
#   covid_data %>%
#   filter(new_cases_per_million > 50)
#
# #creating a histogram with covid_data_his
# ggplot(covid_data_his, aes(new_cases_per_million)) +
#   geom_histogram(binwidth=1)
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RCurl)
library(curl)
Data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv", header = TRUE, sep = ",")
iso_react <- "AFG"
govt_data_2 <- filter(covid_data_by_country, iso_code==iso_react)
covid_data<-Data
covid_data_by_country <- covid_data
iso_react <- "AFG"
govt_data_2 <- filter(covid_data_by_country, iso_code==iso_react)
View(govt_data_2)
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases)) +
geom_line() +
xlab("")
g
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases, group=1)) +
geom_line() +
xlab("")
g
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases, group=1)) +
geom_line()
g
shiny::runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp()
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
?traceback
traceback()
output$plot_country <- renderPrint({
# Adding clicking on second plot for info on country
#day_formatted <- str_glue("{month(day)}/{day(day)}/{year(day)}")
iso_react <- input$plot_react_click[2]
govt_data_2 <- filter(covid_data_by_country, iso_code==iso_react)
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases, group=1)) +
geom_line()
g
})
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
shiny::runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RCurl)
library(curl)
Data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv", header = TRUE, sep = ",")
covid_data<-Data
covid_data_by_country <- covid_data
govt_data_2 <- filter(covid_data_by_country, iso_code=="AFG")
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases, group=1)) +
geom_line()
g
govt_data_2 <- filter(covid_data_by_country, iso_code=="CHN")
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases, group=1)) +
geom_line()
g
govt_data_2 <- filter(covid_data_by_country, iso_code=="GBR")
g <-
ggplot(govt_data_2, aes(x=date, y=total_cases, group=1)) +
geom_line()
g
govt_data_2
?govt_data_2
??govt_data_2
class(govt_data_2$date)
govt_data_2 <- filter(covid_data_by_country, iso_code=="GBR")
g <-
ggplot(govt_data_2, aes(x=as.Date(date), y=total_cases, group=1)) +
geom_line()
g
govt_data_2 <- filter(covid_data_by_country, iso_code=="AFG")
g <-
ggplot(govt_data_2, aes(x=as.Date(date), y=total_cases, group=1)) +
geom_line()
g
govt_data_2 <- filter(covid_data_by_country, iso_code=="AFG")
g <-
ggplot(govt_data_2, aes(x=as.Date(date), y=total_cases, group=1)) +
geom_line() +
labs(x = "Date")
g
shiny::runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
shiny::runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
?size
?.size
size
iso_react.size
size(iso_react)
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
?or
FALSE | TRUE
FALSE | FALSE
5 | FALSE
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
?|
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
shiny::runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
runApp('C:/Users/16032/OneDrive - Grinnell College/Desktop/Year 3 Sem 2/CSC324/CSC324-repository/covid_shiny')
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RCurl)
library(curl)
library(modelr)
Data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv", header = TRUE, sep = ",")
# y <- list("Africa", 'Asia', 'Australia', 'Europe', 'North America', 'South America')
##BY COUNTRY
#covid_data = read.csv("covid-data-2.csv", header = TRUE, sep = ",")
covid_data<-Data
covid_data_by_country <- covid_data
#View(lat_long)
covid_data_by_country <- select(covid_data_by_country, iso_code:new_cases_per_million)
state.name
class(state.name)
measures <- c("Lockdown", "Border closure")
measures
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RCurl)
library(curl)
library(modelr)
Data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv", header = TRUE, sep = ",")
# y <- list("Africa", 'Asia', 'Australia', 'Europe', 'North America', 'South America')
##BY COUNTRY
#covid_data = read.csv("covid-data-2.csv", header = TRUE, sep = ",")
covid_data<-Data
covid_data_by_country <- covid_data
#View(lat_long)
covid_data_by_country <- select(covid_data_by_country, iso_code:new_cases_per_million)
setwd('C:\\Users\\16032\\OneDrive - Grinnell College\\Desktop\\Year 3 Sem 2\\CSC324\\CSC324-repository\\covid_shiny')
govt_data<-read.csv("government_measures.csv", header = TRUE, sep = ",")
govt_data$date <- strptime(as.character(govt_data$DATE_IMPLEMENTED), "%m/%d/%Y")
govt_data$date <- format(govt_data$date, "%Y-%m-%d")
govt_data <-
filter(govt_data, DATE_IMPLEMENTED!="")
govt_data <-
govt_data %>%
mutate(date=as.Date(DATE_IMPLEMENTED, "%m/%d/%Y"))
govt_data <-
filter(govt_data, !is.na(DATE_IMPLEMENTED))
govt_data <-
filter(govt_data, LOG_TYPE == "Introduction / extension of measures")
by_country <- covid_data_by_country %>%
group_by(location, continent) %>%
nest()
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RCurl)
library(curl)
library(modelr)
Data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv", header = TRUE, sep = ",")
# y <- list("Africa", 'Asia', 'Australia', 'Europe', 'North America', 'South America')
##BY COUNTRY
#covid_data = read.csv("covid-data-2.csv", header = TRUE, sep = ",")
covid_data<-Data
covid_data_by_country <- covid_data
#View(lat_long)
covid_data_by_country <- select(covid_data_by_country, iso_code:new_cases_per_million)
setwd('C:\\Users\\16032\\OneDrive - Grinnell College\\Desktop\\Year 3 Sem 2\\CSC324\\CSC324-repository\\covid_shiny')
govt_data<-read.csv("government_measures.csv", header = TRUE, sep = ",")
govt_data$date <- strptime(as.character(govt_data$DATE_IMPLEMENTED), "%m/%d/%Y")
govt_data$date <- format(govt_data$date, "%Y-%m-%d")
govt_data <-
filter(govt_data, DATE_IMPLEMENTED!="")
govt_data <-
govt_data %>%
mutate(date=as.Date(DATE_IMPLEMENTED, "%m/%d/%Y"))
govt_data <-
filter(govt_data, !is.na(DATE_IMPLEMENTED))
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RCurl)
library(curl)
library(modelr)
Data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv", header = TRUE, sep = ",")
# y <- list("Africa", 'Asia', 'Australia', 'Europe', 'North America', 'South America')
##BY COUNTRY
#covid_data = read.csv("covid-data-2.csv", header = TRUE, sep = ",")
covid_data<-Data
covid_data_by_country <- covid_data
#View(lat_long)
covid_data_by_country <- select(covid_data_by_country, iso_code:new_cases_per_million)
setwd('C:\\Users\\16032\\OneDrive - Grinnell College\\Desktop\\Year 3 Sem 2\\CSC324\\CSC324-repository\\covid_shiny')
govt_data<-read.csv("government_measures.csv", header = TRUE, sep = ",")
View(govt_data)
list_measures <- list()
"Lockdown" %in% names(list_measures)
list_measures <- append(list_measures, "Lockdown")
"Lockdown" %in% names(list_measures)
list_measures
list_measures <- c()
list_measures
list_measures <- c(list_measures, "Lockdown")
list_measures
"Lockdown" %in% names(list_measures)
unique(govt_data$MEASURE)
list_meaures <- unique(govt_data$MEASURE)
list_measures
list_measures <- unique(govt_data$MEASURE)
list_measures
shiny::runApp()
runApp()
